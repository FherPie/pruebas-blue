{"version":3,"sources":["components/List.js","components/SearchForm.js","components/FormEditable.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","repos","length","Table","bordered","className","map","repo","usuario_id","usuario_login","nombres","primer_apellido","segundo_apellido","codigo_estado","fecha_actualizacion","onClick","choosePerson","SearchForm","useState","name","setName","Container","onSubmit","e","preventDefault","trim","searchservice","Row","Col","lg","md","sm","type","id","autoComplete","value","onChange","target","FormEditable","personState","datosPersona","setDatosPersona","editButtonRef","useRef","isEditing","setEditing","isUpdating","setUpdating","handleSubmit","updatePerson","viewTemplate","ref","editingTemplate","event","nombre","wasUpdatedForm","defaultValue","maxLength","disabled","useEffect","console","log","App","appState","setAppState","reposBack","appStateBack","setAppStateBack","modalState","setModalState","mensajeModal","setMensajeModal","wasUpdated","setWasUpdated","tipo_documento","numero_documento","tipo_usuario","tipo_gestor","email_laboral","telefono_laboral","movil_laboral","usuario_actualizacion","extension_asterisk","password_asterisk","accion","setPersonState","callofservice","a","url","data","fetch","method","mode","headers","body","JSON","stringify","response","json","mostrarModal","agregaceroadigito","digito","toString","then","res","codigo","dataRest","persona","split","idPerson","personaActualiza","filter","person","today","Date","getFullYear","getMonth","getUTCDate","getHours","getMinutes","getSeconds","retornarFecha","mensaje","role","aria-label","Modal","isOpen","ModalBody","dangerouslySetInnerHTML","__html","ModalFooter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.515a654f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Table } from 'reactstrap';\r\nconst List = (props) => {\r\n    const { repos } = props;\r\n    if (!repos || repos.length === 0) return <p className=\"vacio\">No hay registros para mostrar</p>;\r\n    return (\r\n        <Table bordered className=\"tabla-color\">\r\n               <thead className=\"tabla-color\">\r\n        <tr>\r\n             <th>Id</th>\r\n            <th>Login</th>\r\n            <th>Nombres</th>\r\n            <th>Apellidos</th>\r\n            <th>Estado</th>\r\n            <th>Actualizaci√≥n</th>\r\n            <th>Escojer</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody className=\"tabla-color\">\r\n            {repos.map((repo) => {\r\n                return (\r\n                    <tr key={repo.usuario_id} >\r\n                        <td>{repo.usuario_id}</td>\r\n                        <td>{repo.usuario_login}</td>\r\n                        <td>{repo.nombres}</td>\r\n                        <td>{repo.primer_apellido +\" \"+repo.segundo_apellido }</td>\r\n                        <td>{repo.codigo_estado }</td>\r\n                        <td>{repo.fecha_actualizacion }</td>\r\n                        <td><button onClick={()=>props.choosePerson(repo.usuario_id)} >Escojer</button></td>\r\n                    </tr>\r\n                );\r\n            })}\r\n            </tbody>\r\n       </Table>\r\n    );\r\n};\r\nexport default List;","import React, { useState } from \"react\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nfunction SearchForm(props) {\r\n    const [name, setName] = useState('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (!name.trim()) {\r\n            return;\r\n        }\r\n        props.searchservice(name);\r\n        setName(\"\");\r\n    }\r\n\r\n    function handleChange(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n                        Usuario:\r\n            </Col>\r\n                    <Col lg=\"9\" md=\"6\" sm=\"12\">\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"cuadro_busqueda\"\r\n                            className=\"input input__lg\"\r\n                            name=\"cuadro_busqueda\"\r\n                            autoComplete=\"off\"\r\n                            value={name}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SearchForm;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\n\r\n\r\nfunction FormEditable(props) {\r\n\r\n    const [datosPersona, setDatosPersona] = useState(props.personState);\r\n    const editButtonRef = useRef(null);\r\n    const [isEditing, setEditing] = useState(false);\r\n    const [isUpdating, setUpdating] = useState(false);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.updatePerson(datosPersona);\r\n        setEditing(false);\r\n    }\r\n\r\n    function handleChange(event) {\r\n        const name = event.target.name;\r\n        let nombre=event.target.value;\r\n        datosPersona[name]=nombre;\r\n        setUpdating(true);\r\n        props.wasUpdatedForm(datosPersona);\r\n    }\r\n    const cancelarActualizacion=()=>{\r\n        setUpdating(false);\r\n        setEditing(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const viewTemplate = (\r\n        <div className=\"stack-small\">\r\n          <div className=\"c-cb\">\r\n              <ul>\r\n                <li>{datosPersona[\"usuario_id\"]}</li>\r\n                <li>{datosPersona[\"tipo_documento\"]}</li>\r\n                <li>{datosPersona[\"numero_documento\"]}</li>\r\n                <li>{datosPersona[\"nombres\"]}</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn\"\r\n              onClick={() => setEditing(true)}\r\n              ref={editButtonRef}\r\n              >\r\n                Edit\r\n              </button>\r\n            </div>\r\n        </div>);\r\n\r\n    const editingTemplate = (\r\n        <form onSubmit={handleSubmit}>\r\n        <Container>¬®\r\n        \r\n            {/* <Row>\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n                    Id\r\n                </Col>\r\n\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n                    <input\r\n                        readOnly\r\n                        name=\"person_id\"\r\n                        id=\"person_id\"\r\n                        input=\"text\"\r\n                        autoComplete=\"off\"\r\n                        onChange={handleChange}\r\n                        value={datosPersona.usuario_id}\r\n                    ></input>\r\n\r\n                </Col>\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">Login</Col>\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n                    <input\r\n                        readOnly\r\n                        name=\"usuario_login\"\r\n                        id=\"usuario_login\"\r\n                        input=\"text\"\r\n                        autoComplete=\"off\"\r\n                        onChange={handleChange}\r\n                        value={datosPersona.usuario_login}\r\n                    ></input>\r\n                </Col>\r\n            </Row> */}\r\n\r\n                  <input\r\n                        name=\"nombres\"\r\n                        id=\"nombres\"\r\n                        onChange={handleChange}\r\n                        defaultValue={datosPersona[\"nombres\"]}\r\n                        maxLength=\"50\"\r\n                        type=\"text\"\r\n                    ></input>\r\n\r\n            {/* <Row>\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">Nombres:</Col>\r\n\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n\r\n                    <input\r\n                        name=\"nombres\"\r\n                        id=\"nombres\"\r\n                        input=\"text\"\r\n                        onChange={handleChange}\r\n                        value={datosPersona.nombres}\r\n                        maxLength=\"50\"\r\n\r\n                    ></input>\r\n                </Col>\r\n\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">Primer Apellido:</Col>\r\n\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n\r\n                    <input\r\n                        name=\"primer_apellido\"\r\n                        id=\"primer_apellido\"\r\n                        input=\"text\"\r\n                        onChange={handleChange}\r\n                        value={datosPersona.primer_apellido}\r\n                        maxLength=\"50\"\r\n                    ></input>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">Segundo Apellido:</Col>\r\n\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n\r\n                    <input\r\n                        name=\"segundo_apellido\"\r\n                        id=\"segundo_apellido\"\r\n                        input=\"text\"\r\n                        onChange={handleChange}\r\n                        value={datosPersona.segundo_apellido}\r\n                        maxLength=\"50\"\r\n                    ></input>\r\n                </Col>\r\n\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">Email Laboral:</Col>\r\n\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n\r\n                    <input\r\n                        name=\"email_laboral\"\r\n                        id=\"email_laboral\"\r\n                        input=\"text\"\r\n                        onChange={handleChange}\r\n                        value={datosPersona.email_laboral}\r\n                        type=\"email\"\r\n                    ></input>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">Tel√©fono Laboral:</Col>\r\n\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n\r\n                    <input\r\n                        name=\"telefono_laboral\"\r\n                        id=\"telefono_laboral\"\r\n                        input=\"text\"\r\n                        onChange={handleChange}\r\n                        value={datosPersona.telefono_laboral}\r\n                        type=\"telephone\"\r\n                    ></input>\r\n                </Col>\r\n\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">Extensi√≥n:</Col>\r\n\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n\r\n                    <input\r\n                        name=\"extension_asterisk\"\r\n                        id=\"extension_asterisk\"\r\n                        input=\"text\"\r\n                        onChange={handleChange}\r\n                        value={datosPersona.extension_asterisk}\r\n                    ></input>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">Contrase√±a:</Col>\r\n\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n\r\n                    <input\r\n                        name=\"password_asterisk\"\r\n                        id=\"password_asterisk\"\r\n                        input=\"text\"\r\n                        onChange={handleChange}\r\n                        value={datosPersona.password_asterisk}\r\n                    ></input>\r\n                </Col>\r\n\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">Codigo:</Col>\r\n\r\n                <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n\r\n                    <input\r\n                        name=\"codigo_estado\"\r\n                        id=\"codigo_estado\"\r\n                        input=\"text\"\r\n                        onChange={handleChange}\r\n                        value={datosPersona.codigo_estado}\r\n                    ></input>\r\n                </Col>\r\n\r\n            </Row> */}\r\n\r\n        </Container>\r\n\r\n        <button disabled={!isUpdating} onClick={() => handleSubmit}>Actualizar</button>\r\n        <button  onClick={() => cancelarActualizacion()}>Cancelar</button>\r\n    </form>\r\n    );\r\n   \r\n    useEffect(() => {\r\n        console.log(\"USE EFFECT\")\r\n        setDatosPersona(props.personState);\r\n    });\r\n\r\n    return isEditing ? editingTemplate : viewTemplate;\r\n\r\n\r\n}\r\n\r\nexport default FormEditable;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport List from './components/List';\nimport SearchForm from './components/SearchForm';\nimport FormEditable from './components/FormEditable';\nimport { Modal, ModalBody, ModalHeader, ModalFooter } from 'reactstrap';\nimport { Button } from 'bootstrap';\n\nfunction App() {\n\n  const API_ListarUsuarioxNombre = \"https://api.github.com/users/hacktivist123/repos\";\n\n  const [appState, setAppState] = useState({\n    repos: null,\n  });\n\n  \n\n  const [appStateBack, setAppStateBack] = useState({\n    reposBack: null,\n  });\n\n  const [modalState, setModalState] = useState(false);\n  const [mensajeModal, setMensajeModal] = useState('');\n  const [wasUpdated, setWasUpdated] = useState(false);\n\n\n  const [personState, setPersonState] = useState(\n    {\n      usuario_id: \"\",\n      tipo_documento: \"\",\n      numero_documento: \"\",\n      nombres: \"\",\n      primer_apellido: \"\",\n      segundo_apellido: \"\",\n      tipo_usuario: \"\",\n      tipo_gestor: \"\",\n      email_laboral: \"\",\n      telefono_laboral: \"\",\n      movil_laboral: \"\",\n      usuario_login: \"\",\n      codigo_estado: \"\",\n      usuario_actualizacion: \"\",\n      fecha_actualizacion: \"\",\n      extension_asterisk: \"\",\n      password_asterisk: \"\",\n      accion: \"\"\n    }\n  );\n\n  async function callofservice(url = '', data = {}) {\n    const response = await fetch(url, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    return response.json();\n  }\n\n  function mostrarModal() {\n    setModalState(!modalState);\n  };\n\n  function wasUpdatedForm(datosPersona) {\n    const personaActualiza = appStateBack.reposBack.filter(person => datosPersona[\"usuario_id\"] == person.usuario_id);\n    if(personaActualiza===datosPersona){\n      setWasUpdated(false);\n    }else{\n      setWasUpdated(true);\n    }\n  };\n\n\n  function choosePerson(idPerson) {\n    //buscar en un arreglo el id de person y actualizar el estado personState\n    console.log(wasUpdated);\n    if (wasUpdated) {\n      setMensajeModal(\"<h5>Hay datos editados sin actualizar. ¬øDesea descartarlos?</h5>\");\n      mostrarModal();\n    } else {\n      const personaActualiza = appState.repos.filter(person => idPerson == person.usuario_id);\n      setPersonState(personaActualiza[0]);\n    }\n    //console.log(personaActualiza[0]);\n  };\n\n\n  function updatePerson(person) {\n    const apiUrl = 'https://app.crmetric.com/srv-crmetric-web/rest/usuario/registrarUsuario';\n    let today = new Date();\n    person[\"fecha_actualizacion\"] = retornarFecha(today);\n    console.log(person);\n\n    callofservice(apiUrl, person)\n      .then((res) => {\n        if (res.codigo === \"100\") {\n          console.log(res.codigo);\n          console.log(res.codigo === 100);\n          setMensajeModal(\"<h5>Codigo: 100</h5><h5>Mensaje:\" + res.mensaje + \"</h5>\");\n          mostrarModal();\n        } else {\n          console.log(res);\n          // setPersonState(person);\n          // const arrayperson= appState.repos.map(data=>{\n          //   if(data.usuario_id===person.usuario_id){\n          //     return person;\n          //   }\n          //   return data;\n          // });\n          // setAppState({repos:arrayperson}\n        }\n      });\n    ;\n  }\n\n  //Recibe una fecha\n  function retornarFecha(today) {\n    return today.getFullYear() + \"-\" + agregaceroadigito(today.getMonth() + 1)\n      + \"-\" + agregaceroadigito(today.getUTCDate()) + \" \" + agregaceroadigito(today.getHours())\n      + \":\" + agregaceroadigito(today.getMinutes()) + \":\" + agregaceroadigito(today.getSeconds());\n  }\n  // recibe string\n  function agregaceroadigito(digito) {\n    return (digito).toString().length == 1 ? \"0\" + (digito).toString() : (digito).toString();\n  }\n\n  function searchservice(name) {\n    const apiUrl = `https://app.crmetric.com/srv-crmetric-web/rest/usuario/listarUsuarioxnombre`;\n    callofservice(apiUrl, { 'nombres': name })\n      .then((res) => {\n        if (res.codigo === 105) {\n          setAppState({ repos: null });\n        } else {\n          const dataRest = res.data.map(persona => {\n            persona.fecha_actualizacion = persona.fecha_actualizacion.split(\" \")[0];\n            return persona;\n          });\n          setAppState({ repos: [...dataRest] });\n          setAppStateBack({ reposBack:  [...dataRest]});\n        }\n      });\n\n  }\n\n\n  // function formatearfecha(string) {\n  //   var opdations;\n\n  // }\n\n  useEffect(() => {\n   // setWasUpdated(false);\n  });\n\n  return (\n    <div className='App'>\n      <h4>BluePoint Pruebas</h4>\n      <div className='container'>\n        <SearchForm searchservice={searchservice} />\n      </div>\n\n\n      <div className='repo-container'>\n        <List repos={appState.repos} choosePerson={choosePerson} />\n      </div>\n\n      <div className='repo-container'>\n        <FormEditable personState={personState} updatePerson={updatePerson} wasUpdatedForm={wasUpdatedForm} />\n      </div>\n\n      <footer>\n        <div className='footer'>\n          Hecho con {' '}\n          <span role='img' aria-label='love'>\n            üíö\n          </span>{' '}\n          por Andr√©s Fernando Piedra\n        </div>\n      </footer>\n\n\n      <Modal isOpen={modalState}>\n        <ModalBody>\n          <div dangerouslySetInnerHTML={{ __html: mensajeModal }} />\n\n        </ModalBody>\n        <ModalFooter>\n          <button onClick={() => mostrarModal()}>Cancelar</button>\n        </ModalFooter>\n      </Modal>\n\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}